user  nginx; # NGINX 프로세스를 실행할 사용자를 지정합니다.
worker_processes auto; # NGINX 프로세스의 수를 지정합니다.
error_log  /var/log/nginx/error.log warn; # 에러 로그 파일의 경로를 지정합니다.
pid        /var/run/nginx.pid; # NGINX 프로세스의 PID 파일의 경로를 지정합니다.

events {
    worker_connections  1024; # 동시 접속 처리 수
}

http {
    include /etc/nginx/mime.types; # MIME 타입 설정 파일을 포함합니다.
    default_type application/octet-stream; # 기본 MIME 타입을 설정합니다.

    server_tokens off; # NGINX 버전 정보를 응답 헤더에서 제거합니다.
    keepalive_timeout 75; # keepalive 타임아웃을 75초로 설정합니다.

    proxy_buffers 16 16k;
    proxy_buffer_size 32k;


    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"'; # 로그 포맷을 설정합니다.

    upstream backend {
        server 3.38.107.253:8000;
        server 3.38.178.89:8000 down;
        server django:8000 weight=2;
    }

    upstream front {
        server 3.38.107.253:3000;
        server 3.38.178.89:3000 down;
        server frontend:3000 weight=2;
    }

    server {
        listen 80; # 80번 포트에서 요청을 수신하도록 설정합니다.
        server_name relaysketch.online www.relaysketch.online; # 서버의 도메인 이름을 설정합니다.
        server_tokens off; # NGINX 버전 정보를 응답 헤더에서 제거합니다.

        location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        }

        location / {
        return 301 https://www.relaysketch.online$request_uri;
        }
    }

    server {
        listen 443 ssl; # 443번 포트에서 요청을 수신하도록 설정합니다.
        server_name relaysketch.online www.relaysketch.online; # 서버의 도메인 이름을 설정합니다.
        server_tokens off; # NGINX 버전 정보를 응답 헤더에서 제거합니다.

        ssl_certificate /etc/letsencrypt/live/relaysketch.online/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/relaysketch.online/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        location = /favicon.ico { access_log off; log_not_found off; }

        # Django 정적 파일 설정
        location ~ ^/static/ {
            alias /staticfiles/; # Django의 정적 파일이 저장된 실제 경로로 변경해야 합니다.
            expires 30d; # 정적 파일에 대한 캐시 만료 시간을 30일로 설정합니다.
        }

        # # Django 미디어 파일 설정
        # location /media/ {
        #     alias /path/to/media/files/; # Django의 미디어 파일이 저장된 실제 경로로 변경해야 합니다.
        #     expires 90d; # 미디어 파일에 대한 캐시 만료 시간을 90일로 설정합니다.
        # }

        # Frontend 설정
        location / {
            proxy_pass http://front; # upstream 블록에서 설정한 이름을 사용합니다.
            # 아래 proxy_set_header 지시문들은 프록시된 요청의 헤더를 설정합니다.
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Django 설정 (API페이지)
        location ~ ^/api/ {
            proxy_pass http://backend; # upstream 블록에서 설정한 이름을 사용합니다.
            # 아래 proxy_set_header 지시문들은 프록시된 요청의 헤더를 설정합니다.
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Content-Type application/json;
        }

        # Django 설정 (웹소켓)
        location ~ ^/ws/ {
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_redirect off;
            proxy_pass http://backend; # upstream 블록에서 설정한 이름을 사용합니다.
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $server_name;
            proxy_set_header Content-Type application/json;

            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
        }   

        # gzip 설정
        gzip on; # gzip 압축 활성화
        gzip_disable "msie6"; # IE6에서 gzip 압축 비활성화
        gzip_vary on; # Vary 헤더를 통해 프록시 서버에 압축된 콘텐츠를 캐시하도록 지시
        gzip_proxied any; # 모든 프록시된 응답에 대해 gzip 압축 적용
        gzip_comp_level 6; # gzip 압축 레벨 설정 (1이 가장 낮고 9가 가장 높음)
        gzip_buffers 16 8k; # 압축을 위한 버퍼 크기 설정
        gzip_http_version 1.1; # HTTP 버전 1.1 이상에서 gzip 압축을 사용하도록 설정
        gzip_min_length 256; # 이 길이 이상의 응답에 대해서만 gzip 압축 적용
        # 압축 적용 대상 MIME 타입 설정
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    }
}

