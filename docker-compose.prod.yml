version: "3.7"

services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.7.14-management-alpine
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}

  django:
    container_name: django
    image: maaayreel/relaysketch-backend:latest
    restart: always
    depends_on:
      - rabbitmq
    environment: &common_env
      SECRET_KEY: ${SECRET_KEY}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_HOST: ${DB_HOST}
      DB_USER_PASSWORD: ${DB_USER_PASSWORD}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      NAVER_CLIENT_ID: ${NAVER_CLIENT_ID}
      NAVER_CLIENT_SECRET: ${NAVER_CLIENT_SECRET}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_STORAGE_BUCKET_NAME: ${AWS_STORAGE_BUCKET_NAME}
      AWS_S3_REGION_NAME: ${AWS_S3_REGION_NAME}
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
      AWS_REDIS_HOST: ${AWS_REDIS_HOST}
    command: sh -c "/wait && pipenv run python manage.py collectstatic --no-input && pipenv run gunicorn -c gunicorn.conf.py config.asgi:application --bind 0.0.0.0:8000"

  celery_worker:
    container_name: celery_worker
    image: maaayreel/relaysketch-backend:latest
    restart: always
    depends_on:
      - django
      - rabbitmq
    environment:
      <<: *common_env
    command: sh -c "pipenv run celery -A config worker --loglevel=info"

  celery_beat:
    container_name: celery_beat
    image: maaayreel/relaysketch-backend:latest
    restart: always
    depends_on:
      - django
      - rabbitmq
      - celery_worker
    environment:
      <<: *common_env
    command: sh -c "pipenv run celery -A config beat --loglevel=info"

  frontend:
    container_name: frontend
    ports:
      - "3000:3000"
    image: maaayreel/relaysketch-frontend:latest
    depends_on:
      - django

  nginx:
    container_name: nginx
    image: maaayreel/relaysketch-nginx:latest
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - django
      - frontend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nignx.conf
      - staticfiles:/staticfiles
      - ./nginx/log:/var/log/nginx
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''

  certbot:
    container_name: certbot
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  staticfiles: {}
