name: CD

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker backend image
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          file: ./backend/Dockerfile.prod
          push: true
          tags: maaayreel/relaysketch-backend:latest

      - name: Build and push Docker frontend image
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          file: ./frontend/Dockerfile.prod
          push: true
          tags: maaayreel/relaysketch-frontend:latest

      - name: Build and push Docker nginx image
        uses: docker/build-push-action@v2
        with:
          context: ./nginx
          push: true
          tags: maaayreel/relaysketch-nginx:latest

      - name: Create env file
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env

      - name: Copy env file to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          port: ${{ secrets.EC2_PORT }}
          source: ".env"
          target: "/compose"

      - name: Copy docker-compose.prod.yml to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          port: ${{ secrets.EC2_PORT }}
          source: "docker-compose.prod.yml"
          target: "/compose/docker-compose.yml"

      - name: Deploy to EC2 Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script: |
            cd compose
            if [ -f .env ]; then
              docker-compose down
              docker-compose pull
              docker-compose up -d
            else
              echo ".env file does not exist"
              exit 1
            fi
